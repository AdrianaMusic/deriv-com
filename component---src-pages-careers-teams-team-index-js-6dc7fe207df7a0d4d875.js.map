{"version":3,"sources":["webpack:///./src/pages/careers/_layout-components/_container.js","webpack:///./src/pages/careers/_layout-components/_link-list.js","webpack:///./src/pages/careers/_layout-components/_no-open-positions.js","webpack:///./src/pages/careers/teams/team/index.js"],"names":["CareerContainer","styled","Container","device","desktop","laptopL","desktopL","ChevronRight","Chevron","List","ul","ListItem","li","tabletL","Circle","span","StyledText","Text","MiddleText","LinkList","list_items","map","item","idx","key","to","ai","jc","tablet_direction","tablet_ai","secondary","weight","text","middle_text","width","number","StyledHeader","Header","NoOpenPositionsHeader","children","mb","align","size","as","StyledContainer","mobileL","Subheadline","Hero","name","display_name","team_description","hero_img","useStaticQuery","data","replace","style","height","TeamWrapper","section","WithIntl","team_name","getLocationHash","isBrowser","navigate","team","getTeamByName","type","padding_top","title","team_names","no_index","background_image","hero_image","description","positions","position","toHashFormat","id","locations","location","length"],"mappings":"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","file":"component---src-pages-careers-teams-team-index-js-6dc7fe207df7a0d4d875.js","sourcesContent":["import styled from 'styled-components'\nimport device from 'themes/device'\nimport { Container } from 'components/containers'\n\nconst CareerContainer = styled(Container)`\n    @media ${device.desktop} {\n        max-width: 996px;\n    }\n    @media ${device.laptopL} {\n        max-width: 996px;\n        width: 100%;\n    }\n    @media ${device.desktopL} {\n        max-width: 1400px;\n    }\n`\n\nexport default CareerContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Container from './_container'\nimport { Text } from 'components/elements'\nimport { Flex } from 'components/containers'\nimport { LocalizedLink } from 'components/localization'\nimport device from 'themes/device'\nimport Chevron from 'images/svg/carousel-chevron.svg'\n\nconst ChevronRight = styled(Chevron)`\n    width: 16px;\n    height: 16px;\n    transform: rotate(180deg);\n\n    g {\n        g {\n            fill: var(--color-black);\n        }\n    }\n`\nconst List = styled.ul`\n    width: 99.6rem;\n    padding-bottom: 2rem;\n`\n\nconst ListItem = styled.li`\n    width: 100%;\n    height: 8.4rem;\n    border-bottom: 1px solid var(--color-grey-7);\n    transition: background-color 0.25s;\n    padding: 0 1.6rem;\n\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(244, 244, 244, 0.4);\n    }\n    @media ${device.tabletL} {\n        height: 100%;\n        padding: 1.6rem;\n    }\n`\nconst Circle = styled.span`\n    font-size: 2.1rem;\n    font-weight: bold;\n    width: 32px;\n    height: 32px;\n    margin-right: 16px;\n    border-radius: 50%;\n    background-color: var(--color-green);\n    color: var(--color-white);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst StyledText = styled(Text)`\n    min-width: 50%;\n    max-width: 45rem;\n    font-size: var(--text-size-m);\n    padding-right: 10px;\n`\nconst MiddleText = styled(Text)`\n    margin-right: auto;\n    font-size: var(--text-size-sm);\n`\n\nexport const LinkList = ({ list_items }) => (\n    <Container>\n        <List>\n            {list_items &&\n                list_items.map((item, idx) => (\n                    <ListItem key={idx}>\n                        <LocalizedLink to={item.to}>\n                            <Flex ai=\"center\" jc=\"unset\">\n                                <Flex tablet_direction=\"column\" tablet_ai=\"unset\" ai=\"center\">\n                                    <StyledText secondary=\"true\" weight=\"bold\">\n                                        {item.text}\n                                    </StyledText>\n                                    <MiddleText>{item.middle_text}</MiddleText>\n                                </Flex>\n                                <Flex ai=\"center\" width=\"unset\">\n                                    {item.number && <Circle>{item.number}</Circle>}\n                                    <ChevronRight />\n                                </Flex>\n                            </Flex>\n                        </LocalizedLink>\n                    </ListItem>\n                ))}\n        </List>\n    </Container>\n)\n\nLinkList.propTypes = {\n    list_items: PropTypes.array,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Header } from 'components/elements'\n\nconst StyledHeader = styled(Header)`\n    color: rgba(51, 51, 51, 0.32);\n`\n\nexport const NoOpenPositionsHeader = ({ children, mb }) => (\n    <StyledHeader align=\"center\" size=\"var(--text-size-l)\" as=\"h4\" mb={mb}>\n        {children}\n    </StyledHeader>\n)\n\nNoOpenPositionsHeader.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    mb: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery, navigate } from 'gatsby'\nimport { LinkList } from '../../_layout-components/_link-list'\nimport { NoOpenPositionsHeader } from '../../_layout-components/_no-open-positions'\nimport { getTeamByName, team_names } from '../../_controller/_teams'\nimport { locations } from '../../_model/_locations/_locations'\nimport { SEO, Container } from 'components/containers'\nimport { BackgroundImage, Text, Header } from 'components/elements'\nimport Layout from 'components/layout/layout'\nimport { WithIntl } from 'components/localization'\nimport { getLocationHash, toHashFormat, isBrowser } from 'common/utility'\nimport device from 'themes/device'\n\nconst StyledContainer = styled(Container)`\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n`\n\nconst StyledHeader = styled(Header)`\n    font-size: var(--text-size-xl);\n    margin-bottom: 1.6rem;\n    color: var(--color-white);\n    word-break: break-word;\n\n    @media ${device.mobileL} {\n        max-width: 300px;\n    }\n`\n\nconst Subheadline = styled(Text)`\n    font-size: 2rem;\n    color: var(--color-white);\n    max-width: 98.4rem;\n`\nconst query = graphql`\n    query {\n        devops: file(relativePath: { eq: \"careers/hero-devops.jpg\" }) {\n            ...backGroundBlur\n        }\n        compliance: file(relativePath: { eq: \"careers/hero-compliance.jpg\" }) {\n            ...backGroundBlur\n        }\n        marketing: file(relativePath: { eq: \"careers/hero-marketing.jpg\" }) {\n            ...backGroundBlur\n        }\n        qualityassurance: file(relativePath: { eq: \"careers/hero-quality-assurance.jpg\" }) {\n            ...backGroundBlur\n        }\n        accountsandpayments: file(relativePath: { eq: \"careers/hero-accounts-payments.jpg\" }) {\n            ...backGroundBlur\n        }\n        backend: file(relativePath: { eq: \"careers/hero-back-end.jpg\" }) {\n            ...backGroundBlur\n        }\n        businessintelligence: file(relativePath: { eq: \"careers/hero-business-intelligence.jpg\" }) {\n            ...backGroundBlur\n        }\n        content: file(relativePath: { eq: \"careers/hero-content.jpg\" }) {\n            ...backGroundBlur\n        }\n        cryptodevelopment: file(relativePath: { eq: \"careers/hero-crypto-development.jpg\" }) {\n            ...backGroundBlur\n        }\n        customersupport: file(relativePath: { eq: \"careers/hero-customer-support.jpg\" }) {\n            ...backGroundBlur\n        }\n        disasterrecovery: file(relativePath: { eq: \"careers/hero-disaster-recovery.jpg\" }) {\n            ...backGroundBlur\n        }\n        frontend: file(relativePath: { eq: \"careers/hero-front-end.jpg\" }) {\n            ...backGroundBlur\n        }\n        hrrecruitment: file(relativePath: { eq: \"careers/hero-hr-recruitment.jpg\" }) {\n            ...backGroundBlur\n        }\n        internalaudit: file(relativePath: { eq: \"careers/hero-internal-audit.jpg\" }) {\n            ...backGroundBlur\n        }\n        itadmin: file(relativePath: { eq: \"careers/hero-it-admin.jpg\" }) {\n            ...backGroundBlur\n        }\n        productdesign: file(relativePath: { eq: \"careers/hero-product-design.jpg\" }) {\n            ...backGroundBlur\n        }\n        projectmanagement: file(relativePath: { eq: \"careers/hero-project-management.jpg\" }) {\n            ...backGroundBlur\n        }\n        quants: file(relativePath: { eq: \"careers/hero-quants.jpg\" }) {\n            ...backGroundBlur\n        }\n        security: file(relativePath: { eq: \"careers/hero-security.jpg\" }) {\n            ...backGroundBlur\n        }\n    }\n`\n\nconst Hero = ({ name, display_name, team_description }) => {\n    if (!name) return null\n    const hero_img = useStaticQuery(query)\n\n    return (\n        <BackgroundImage\n            data={hero_img[name.replace(/-+/g, '')]}\n            style={{\n                height: '64.6rem',\n                width: '100%',\n            }}\n        >\n            <StyledContainer>\n                <StyledHeader as=\"h1\" align=\"center\">\n                    {display_name}\n                </StyledHeader>\n                <Subheadline align=\"center\">{team_description}</Subheadline>\n            </StyledContainer>\n        </BackgroundImage>\n    )\n}\n\nconst TeamWrapper = styled.section`\n    padding: 12rem 0;\n\n    ${Header} {\n        padding-bottom: 8rem;\n    }\n`\nconst Team = () => {\n    const team_name = getLocationHash()\n    if (!team_name) {\n        if (isBrowser()) {\n            navigate('/careers/teams/')\n        }\n\n        return null\n    }\n    const team = getTeamByName(team_name)\n\n    return (\n        <Layout type=\"careers\" padding_top=\"10rem\">\n            <SEO title={`Team ${team_names[team.name]}`} no_index />\n            <Hero\n                background_image={team.hero_image}\n                display_name={team_names[team.name]}\n                name={team.name}\n                team_description={team.description}\n            />\n            <TeamWrapper>\n                <Header as=\"h2\" size=\"var(--text-size-l)\" align=\"center\">\n                    Open positions\n                </Header>\n                <LinkList\n                    list_items={\n                        team.positions &&\n                        team.positions.map((position) => ({\n                            text: position.title,\n                            to: `/careers/jobs/job#${toHashFormat(position.id)}`,\n                            middle_text: locations[position.location],\n                        }))\n                    }\n                />\n                {team.positions && !team.positions.length && (\n                    <NoOpenPositionsHeader>\n                        {`Sorry, there are currently no open positions for ${\n                            team_names[team.name]\n                        }`}\n                    </NoOpenPositionsHeader>\n                )}\n            </TeamWrapper>\n        </Layout>\n    )\n}\n\nHero.propTypes = {\n    background_image: PropTypes.string,\n    display_name: PropTypes.string,\n    name: PropTypes.string,\n    team_description: PropTypes.string,\n}\n\nexport default WithIntl()(Team)\n"],"sourceRoot":""}
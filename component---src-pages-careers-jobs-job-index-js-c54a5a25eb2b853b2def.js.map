{"version":3,"sources":["webpack:///./src/images/svg/small-location.svg","webpack:///./src/pages/careers/jobs/job/index.js"],"names":["React","SmallLocation","props","createElement","defaultProps","module","exports","default","Banner","styled","section","StyledContainer","div","device","mobileL","BackText","LeftChevron","Chevron","DescHeader","Header","DescText","Text","Ul","ul","Li","li","StyledHeader","RoleContainer","WithIntl","position_name","getLocationHash","job","getJobPositionById","type","title","color","team_names","team","as","m","height","jc","ai","locations","location","join","onClick","isBrowser","window","history","go","weight","description","map","desc","idx","key","responsibilities","responsibility","qualifications","length","qualification","preferences","preference"],"mappings":"+EAAA,IAAIA,EAAQ,EAAQ,QAEpB,SAASC,EAAeC,GACpB,OAAOF,EAAMG,cAAc,MAAMD,EAAM,CAACF,EAAMG,cAAc,QAAQ,CAAC,GAAK,iBAAiB,IAAM,GAAG,YAAYH,EAAMG,cAAc,OAAO,CAAC,KAAO,UAAU,EAAI,mWAAmW,IAAM,MAG9gBF,EAAcG,aAAe,CAAC,KAAO,MAAM,kBAAkB,iBAAiB,MAAQ,KAAK,OAAS,KAAK,QAAU,aAEnHC,EAAOC,QAAUL,EAEjBA,EAAcM,QAAUN,G,kCCVxB,sLAcMO,EAASC,IAAOC,QAAV,8DAAGD,CAAH,yDAKNE,EAAkBF,IAAOG,IAAV,uEAAGH,CAAH,yIASRI,IAAOC,SAKdC,EAAWN,IAAOG,IAAV,gEAAGH,CAAH,gJAaRO,EAAcP,YAAOQ,KAAV,mEAAGR,CAAH,kDAKXS,EAAaT,YAAOU,KAAV,kEAAGV,CAAH,uEASVW,EAAWX,YAAOY,KAAV,gEAAGZ,CAAH,uDAQRa,EAAKb,IAAOc,GAAV,0DAAGd,CAAH,0EAMFe,EAAKf,IAAOgB,GAAV,0DAAGhB,CAAH,yDAQFiB,EAAejB,YAAOU,KAAV,oEAAGV,CAAH,uDAGLI,IAAOC,SAKda,EAAgBlB,YAAOE,GAAV,qEAAGF,CAAH,0BAsFJmB,yBAlFH,WACR,IAAMC,EAAgBC,cACtB,IAAKD,EAAe,OAAO,KAC3B,IAAME,EAAMC,YAAmBH,GAM/B,OACI,kBAAC,IAAD,CAAQI,KAAK,WACT,kBAAC,IAAD,CAAKC,MAAO,QACZ,kBAAC1B,EAAD,KACI,kBAACG,EAAD,KACI,kBAAC,IAAD,CAAMwB,MAAM,SAASC,IAAWL,EAAIM,OACpC,kBAACX,EAAD,CAAcY,GAAG,KAAKH,MAAM,QAAQI,EAAE,mBACjCR,EAAIG,OAET,kBAAC,IAAD,CAAMM,OAAO,OAAOC,GAAG,aAAaC,GAAG,UACnC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMP,MAAM,QAAQI,EAAE,qBACjBI,IAAUZ,EAAIa,WAEnB,kBAAC,IAAD,CAAMT,MAAM,SAASJ,EAAIE,KAAKY,KAAK,UAI/C,kBAAClB,EAAD,KACI,kBAACZ,EAAD,CAAU+B,QAvBH,WACfC,eAAeC,OAAOC,QAAQC,IAAI,KAuBtB,kBAAClC,EAAD,MACA,kBAAC,IAAD,CAAMmC,OAAO,QAAQ,SAGzB,kBAACjC,EAAD,CAAYoB,GAAG,MAAM,eACpBP,EAAIqB,aACDrB,EAAIqB,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAAe,kBAACnC,EAAD,CAAUoC,IAAKD,GAAMD,MAE5D,kBAACpC,EAAD,CAAYoB,GAAG,MAAM,oBACrB,kBAAChB,EAAD,KACKS,EAAI0B,kBACD1B,EAAI0B,iBAAiBJ,KAAI,SAACK,EAAgBH,GAAjB,OACrB,kBAAC/B,EAAD,CAAIgC,IAAKD,GACL,kBAAC,IAAD,KAAOG,QAKvB,kBAACxC,EAAD,CAAYoB,GAAG,MACVP,EAAI4B,eAAeC,OAAS,EACvB,yBACA,yBAEV,kBAACtC,EAAD,KACKS,EAAI4B,gBACD5B,EAAI4B,eAAeN,KAAI,SAACQ,EAAeN,GAAhB,OACnB,kBAAC/B,EAAD,CAAIgC,IAAKD,GACL,kBAAC,IAAD,KAAOM,QAItB9B,EAAI+B,aACD,oCACI,kBAAC5C,EAAD,CAAYoB,GAAG,MACVP,EAAI+B,YAAYF,OAAS,EACpB,2BACA,2BAEV,kBAACtC,EAAD,KACKS,EAAI+B,aACD/B,EAAI+B,YAAYT,KAAI,SAACU,EAAYR,GAAb,OAChB,kBAAC/B,EAAD,CAAIgC,IAAKD,GACL,kBAAC,IAAD,KAAOQ","file":"component---src-pages-careers-jobs-job-index-js-c54a5a25eb2b853b2def.js","sourcesContent":["var React = require('react');\n\nfunction SmallLocation (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"id\":\"small-location\",\"key\":0},\"Location\"),React.createElement(\"path\",{\"fill\":\"#FF444F\",\"d\":\"M8 0c3.314 0 6 2.686 6 6 0 2.126-1.775 5.17-5.31 9.218L8 16l-.374-.422C3.88 11.35 2 8.188 2 6c0-3.314 2.686-6 6-6zm0 1C5.239 1 3 3.239 3 6c0 1.687 1.466 4.31 4.411 7.802l.589.686.589-.686C11.534 10.31 13 7.687 13 6c0-2.761-2.239-5-5-5zm0 3.1c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2zm0 1c-.552 0-1 .448-1 1s.448 1 1 1 1-.448 1-1-.448-1-1-1z\",\"key\":1})]);\n}\n\nSmallLocation.defaultProps = {\"role\":\"img\",\"aria-labelledby\":\"small-location\",\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = SmallLocation;\n\nSmallLocation.default = SmallLocation;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getJobPositionById, team_names } from '../../_controller/_teams'\nimport { locations } from '../../_model/_locations/_locations'\nimport { SEO, Flex } from 'components/containers'\nimport { Text, Header } from 'components/elements'\nimport Layout from 'components/layout/layout'\nimport { WithIntl } from 'components/localization'\nimport { getLocationHash, isBrowser } from 'common/utility'\nimport device from 'themes/device'\n// SVG\nimport Location from 'images/svg/small-location.svg'\nimport Chevron from 'images/svg/chevron-bottom.svg'\n\nconst Banner = styled.section`\n    background-color: var(--color-black);\n    padding: 8rem 0;\n`\n\nconst StyledContainer = styled.div`\n    max-width: 79.2rem;\n    width: 80%;\n    height: 100%;\n    flex-direction: column;\n    margin: auto;\n    justify-content: center;\n    display: flex;\n\n    @media ${device.mobileL} {\n        width: 83%;\n    }\n`\n\nconst BackText = styled.div`\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    margin-top: 4rem;\n    margin-bottom: 8rem;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`\n\nconst LeftChevron = styled(Chevron)`\n    transform: rotate(90deg);\n    margin-right: 0.8rem;\n`\n\nconst DescHeader = styled(Header)`\n    margin-top: 4rem;\n    margin-bottom: 2.4rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n`\n\nconst DescText = styled(Text)`\n    margin-bottom: 2rem;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`\n\nconst Ul = styled.ul`\n    list-style-type: disc;\n    font-size: var(--text-size-s);\n    padding-left: 2rem;\n`\n\nconst Li = styled.li`\n    margin-bottom: 1.6rem;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`\n\nconst StyledHeader = styled(Header)`\n    word-break: break-word;\n\n    @media ${device.mobileL} {\n        max-width: 300px;\n    }\n`\n\nconst RoleContainer = styled(StyledContainer)`\n    padding-bottom: 4rem;\n`\n\nconst Job = () => {\n    const position_name = getLocationHash()\n    if (!position_name) return null\n    const job = getJobPositionById(position_name)\n\n    const handleBack = () => {\n        isBrowser() && window.history.go(-1)\n    }\n\n    return (\n        <Layout type=\"careers\">\n            <SEO title={'Job'} />\n            <Banner>\n                <StyledContainer>\n                    <Text color=\"white\">{team_names[job.team]}</Text>\n                    <StyledHeader as=\"h2\" color=\"white\" m=\"1.6rem 0 0.8rem\">\n                        {job.title}\n                    </StyledHeader>\n                    <Flex height=\"auto\" jc=\"flex-start\" ai=\"center\">\n                        <Location />\n                        <Text color=\"white\" m=\"0 2.4rem 0 0.8rem\">\n                            {locations[job.location]}\n                        </Text>\n                        <Text color=\"white\">{job.type.join(', ')}</Text>\n                    </Flex>\n                </StyledContainer>\n            </Banner>\n            <RoleContainer>\n                <BackText onClick={handleBack}>\n                    <LeftChevron />\n                    <Text weight=\"bold\">{'Back'}</Text>\n                </BackText>\n\n                <DescHeader as=\"h4\">{'Description'}</DescHeader>\n                {job.description &&\n                    job.description.map((desc, idx) => <DescText key={idx}>{desc}</DescText>)}\n\n                <DescHeader as=\"h4\">{'Responsibilities'}</DescHeader>\n                <Ul>\n                    {job.responsibilities &&\n                        job.responsibilities.map((responsibility, idx) => (\n                            <Li key={idx}>\n                                <Text>{responsibility}</Text>\n                            </Li>\n                        ))}\n                </Ul>\n\n                <DescHeader as=\"h4\">\n                    {job.qualifications.length > 1\n                        ? 'Minimum qualifications'\n                        : 'Minimum qualification'}\n                </DescHeader>\n                <Ul>\n                    {job.qualifications &&\n                        job.qualifications.map((qualification, idx) => (\n                            <Li key={idx}>\n                                <Text>{qualification}</Text>\n                            </Li>\n                        ))}\n                </Ul>\n                {job.preferences && (\n                    <>\n                        <DescHeader as=\"h4\">\n                            {job.preferences.length > 1\n                                ? 'Preferred qualifications'\n                                : 'Preferred qualification'}\n                        </DescHeader>\n                        <Ul>\n                            {job.preferences &&\n                                job.preferences.map((preference, idx) => (\n                                    <Li key={idx}>\n                                        <Text>{preference}</Text>\n                                    </Li>\n                                ))}\n                        </Ul>\n                    </>\n                )}\n            </RoleContainer>\n        </Layout>\n    )\n}\n\nexport default WithIntl()(Job)\n"],"sourceRoot":""}